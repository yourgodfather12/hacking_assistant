import subprocess
import shlex
from config import METASPLOIT_CMD
import logging

logger = logging.getLogger(__name__)

def sanitize_input(value: str) -> str:
    """Sanitize user input to prevent command injection."""
    return shlex.quote(value)

def run_exploit(target: str, exploit: str, payload: str) -> str:
    """Run an exploit on a target using Metasploit."""
    target = sanitize_input(target)
    exploit = sanitize_input(exploit)
    payload = sanitize_input(payload)

    command = f"{METASPLOIT_CMD} -q -x 'use {exploit}; set RHOST {target}; set PAYLOAD {payload}; exploit; exit'"
    try:
        result = subprocess.run(shlex.split(command), capture_output=True, text=True, check=True, timeout=300)
        logger.info(f"Exploit {exploit} executed successfully on target {target} with payload {payload}.")
        return result.stdout
    except subprocess.CalledProcessError as e:
        logger.error(f"Metasploit command failed: {e}")
        return f"An error occurred: {e.output}"
    except subprocess.TimeoutExpired:
        logger.error(f"Metasploit command timed out for target {target}.")
        return "Error: Command timed out."
    except Exception as e:
        logger.error(f"Unexpected error during exploitation of {target}: {e}")
        return f"Unexpected error: {e}"
